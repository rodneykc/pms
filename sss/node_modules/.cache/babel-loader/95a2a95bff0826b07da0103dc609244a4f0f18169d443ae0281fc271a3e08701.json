{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodne\\\\OneDrive\\\\Documents\\\\VS_Studio_WS\\\\sss\\\\src\\\\components\\\\SurgeryScheduling.js\",\n  _s = $RefreshSig$();\n// sss/src/components/SurgeryScheduling.js\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SurgeryScheduling() {\n  _s();\n  const [surgeryRequests, setSurgeryRequests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [practiceFilter, setPracticeFilter] = useState('All');\n  const rowsPerPage = 22;\n  useEffect(() => {\n    const fetchSurgeryRequests = async () => {\n      try {\n        console.log('Fetching surgery requests...');\n        const response = await fetch('/api/surgery-requests/pending');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('API Response:', data);\n        if (data.success) {\n          const sortedRequests = [...data.data].sort((a, b) => b.SURGReqID - a.SURGReqID);\n          setSurgeryRequests(sortedRequests);\n        } else {\n          setError('Failed to load surgery requests');\n        }\n      } catch (err) {\n        const errorMsg = 'Error connecting to the server: ' + err.message;\n        console.error(errorMsg, err);\n        setError(errorMsg);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSurgeryRequests();\n  }, []);\n\n  // Get unique practice names for the filter dropdown\n  const practiceOptions = useMemo(() => {\n    const practices = new Set();\n    surgeryRequests.forEach(request => {\n      if (request.practicename) {\n        practices.add(request.practicename);\n      }\n    });\n    return ['All', ...Array.from(practices).sort()];\n  }, [surgeryRequests]);\n\n  // Filter and paginate the data\n  const filteredRequests = useMemo(() => {\n    return surgeryRequests.filter(request => practiceFilter === 'All' || request.practicename === practiceFilter);\n  }, [surgeryRequests, practiceFilter]);\n\n  // Get current rows for the current page\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRows = filteredRequests.slice(indexOfFirstRow, indexOfLastRow);\n  const totalPages = Math.ceil(filteredRequests.length / rowsPerPage);\n\n  // Reset to first page when filter changes\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [practiceFilter]);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const nextPage = () => setCurrentPage(prev => Math.min(prev + 1, totalPages));\n  const prevPage = () => setCurrentPage(prev => Math.max(prev - 1, 1));\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading surgery requests...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"surgery-scheduling\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"practice-filter\",\n          children: \"Filter by Practice:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"practice-filter\",\n          value: practiceFilter,\n          onChange: e => setPracticeFilter(e.target.value),\n          className: \"filter-select\",\n          children: practiceOptions.map((practice, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: practice,\n            children: practice || 'N/A'\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"filter-count\",\n          children: [\"Showing \", filteredRequests.length, \" of \", surgeryRequests.length, \" records\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pending Surgery Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"surgery-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Request ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Patient ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Patient Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Patient Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Practice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Procedure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Surgeon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Requested Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Location Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Anesthesia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cleared\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentRows.length > 0 ? currentRows.map(request => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.SURGReqID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.pid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.patientName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.patientStatus || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.practicename || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.procedureDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.surgeon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.requestedDate || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.location || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.locationType || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.anesthesiaType || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.payMethod || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.status || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request.clearedToSchedule || 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-btn\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-btn\",\n                children: \"Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)]\n          }, request.SURGReqID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"15\",\n              children: \"No pending surgery requests found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), filteredRequests.length > rowsPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        disabled: currentPage === 1,\n        className: \"pagination-btn\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-numbers\",\n        children: Array.from({\n          length: Math.min(5, totalPages)\n        }, (_, i) => {\n          // Show first page, last page, current page, and pages around current page\n          let pageNum;\n          if (totalPages <= 5) {\n            pageNum = i + 1;\n          } else if (currentPage <= 3) {\n            pageNum = i + 1;\n          } else if (currentPage >= totalPages - 2) {\n            pageNum = totalPages - 4 + i;\n          } else {\n            pageNum = currentPage - 2 + i;\n          }\n          if (i === 3 && currentPage < totalPages - 3) {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ellipsis\",\n              children: \"...\"\n            }, \"ellipsis\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 24\n            }, this);\n          }\n          if (i === 4 && currentPage < totalPages - 3) {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => paginate(totalPages),\n                className: `pagination-btn ${currentPage === totalPages ? 'active' : ''}`,\n                children: totalPages\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this)\n            }, \"last\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(pageNum),\n            className: `pagination-btn ${currentPage === pageNum ? 'active' : ''}`,\n            children: pageNum\n          }, pageNum, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        disabled: currentPage === totalPages,\n        className: \"pagination-btn\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"page-info\",\n        children: [\"Page \", currentPage, \" of \", totalPages, \" (\", filteredRequests.length, \" total records)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .surgery-scheduling {\n          padding: 10px;\n          font-family: Arial, sans-serif;\n          width: 100%;\n          box-sizing: border-box;\n          font-size: 12px;\n        }\n        \n        h2 {\n          color: #333;\n          margin: 10px 0;\n          font-size: 1.1rem;\n        }\n        \n        .table-container {\n          width: 100%;\n          overflow-x: auto;\n          -webkit-overflow-scrolling: touch;\n          margin-bottom: 10px;\n          border: 1px solid #e0e0e0;\n          border-radius: 4px;\n          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n        }\n        \n        .surgery-table {\n          width: 100%;\n          min-width: 1100px;\n          border-collapse: collapse;\n          font-size: 0.8rem;\n        }\n        \n        .surgery-table th,\n        .surgery-table td {\n          padding: 4px 6px;\n          text-align: left;\n          border-bottom: 1px solid #e0e0e0;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          max-width: 150px;\n          color: #333;\n          line-height: 1.2;\n        }\n        \n        .surgery-table th {\n          background-color: #e6f0ff;\n          font-weight: 600;\n          position: sticky;\n          top: 0;\n          z-index: 10;\n          font-size: 0.75rem;\n          text-transform: uppercase;\n          letter-spacing: 0.5px;\n          color: #333;\n          padding: 6px 8px;\n        }\n        \n        .surgery-table tbody tr {\n          background-color: #ffffff;\n          color: #333;\n        }\n        \n        .surgery-table tbody tr:nth-child(even) {\n          background-color: #f5f9ff;\n          color: #333;\n        }\n        \n        .surgery-table tbody tr:hover {\n          background-color: #e6f0ff;\n        }\n        \n        .loading, .error {\n          padding: 10px;\n          margin: 5px 0;\n          border-radius: 4px;\n          text-align: center;\n          color: #333;\n        }\n        \n        .loading {\n          background-color: #e3f2fd;\n          color: #0d47a1;\n        }\n        \n        .error {\n          background-color: #ffebee;\n          color: #c62828;\n        }\n        \n        .action-btn {\n          background-color: #4CAF50;\n          color: white;\n          border: none;\n          padding: 2px 6px;\n          margin: 1px;\n          border-radius: 2px;\n          cursor: pointer;\n          font-size: 0.7rem;\n          line-height: 1.2;\n        }\n        \n        .action-btn:hover {\n          background-color: #45a049;\n        }\n        \n        .pagination {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          margin-top: 15px;\n          gap: 5px;\n          flex-wrap: wrap;\n        }\n        \n        .pagination-btn {\n          padding: 4px 10px;\n          margin: 0 2px;\n          border: 1px solid #ddd;\n          background-color: #fff;\n          border-radius: 3px;\n          cursor: pointer;\n          font-size: 0.8rem;\n          transition: all 0.2s;\n        }\n        \n        .pagination-btn:hover:not(:disabled) {\n          background-color: #f0f0f0;\n        }\n        \n        .pagination-btn:disabled {\n          color: #ccc;\n          cursor: not-allowed;\n          border-color: #eee;\n        }\n        \n        .pagination-btn.active {\n          background-color: #4CAF50;\n          color: white;\n          border-color: #4CAF50;\n        }\n        \n        .page-numbers {\n          display: flex;\n          align-items: center;\n          margin: 0 5px;\n        }\n        \n        .ellipsis {\n          margin: 0 5px;\n          font-size: 0.9rem;\n        }\n        \n        .page-info {\n          margin-left: 15px;\n          font-size: 0.8rem;\n          color: #666;\n        }\n        \n        .filters {\n          margin-bottom: 20px;\n          padding: 10px;\n          background-color: #f8f9fa;\n          border-radius: 4px;\n          border: 1px solid #e9ecef;\n        }\n        \n        .filter-group {\n          display: flex;\n          align-items: center;\n          gap: 10px;\n          flex-wrap: wrap;\n        }\n        \n        .filter-group label {\n          font-weight: 500;\n          font-size: 0.9rem;\n          color: #333;\n        }\n        \n        .filter-select {\n          padding: 6px 10px;\n          border: 1px solid #ced4da;\n          border-radius: 4px;\n          font-size: 0.9rem;\n          background-color: white;\n          min-width: 200px;\n        }\n        \n        .filter-count {\n          font-size: 0.85rem;\n          color: #6c757d;\n          margin-left: auto;\n        }\n        \n        @media (max-width: 768px) {\n          .pagination {\n            flex-direction: column;\n            gap: 10px;\n          }\n          \n          .page-info {\n            margin: 10px 0 0 0;\n            text-align: center;\n          }\n          .filter-group {\n            flex-direction: column;\n            align-items: flex-start;\n            gap: 5px;\n          }\n          \n          .filter-select {\n            width: 100%;\n          }\n          \n          .filter-count {\n            margin-left: 0;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(SurgeryScheduling, \"dyPRQxCV1caLQThIMeuoAA6JTWQ=\");\n_c = SurgeryScheduling;\nexport default SurgeryScheduling;\nvar _c;\n$RefreshReg$(_c, \"SurgeryScheduling\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","jsxDEV","_jsxDEV","SurgeryScheduling","_s","surgeryRequests","setSurgeryRequests","loading","setLoading","error","setError","currentPage","setCurrentPage","practiceFilter","setPracticeFilter","rowsPerPage","fetchSurgeryRequests","console","log","response","fetch","ok","Error","status","data","json","success","sortedRequests","sort","a","b","SURGReqID","err","errorMsg","message","practiceOptions","practices","Set","forEach","request","practicename","add","Array","from","filteredRequests","filter","indexOfLastRow","indexOfFirstRow","currentRows","slice","totalPages","Math","ceil","length","paginate","pageNumber","nextPage","prev","min","prevPage","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","practice","index","pid","patientName","patientStatus","procedureDescription","surgeon","requestedDate","location","locationType","anesthesiaType","payMethod","clearedToSchedule","colSpan","onClick","disabled","_","i","pageNum","Fragment","_c","$RefreshReg$"],"sources":["C:/Users/rodne/OneDrive/Documents/VS_Studio_WS/sss/src/components/SurgeryScheduling.js"],"sourcesContent":["// sss/src/components/SurgeryScheduling.js\nimport React, { useState, useEffect, useMemo } from 'react';\n\nfunction SurgeryScheduling() {\n  const [surgeryRequests, setSurgeryRequests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [practiceFilter, setPracticeFilter] = useState('All');\n  const rowsPerPage = 22;\n\n  useEffect(() => {\n    const fetchSurgeryRequests = async () => {\n      try {\n        console.log('Fetching surgery requests...');\n        const response = await fetch('/api/surgery-requests/pending');\n        \n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        \n        const data = await response.json();\n        console.log('API Response:', data);\n        \n        if (data.success) {\n          const sortedRequests = [...data.data].sort((a, b) => \n            b.SURGReqID - a.SURGReqID\n          );\n          setSurgeryRequests(sortedRequests);\n        } else {\n          setError('Failed to load surgery requests');\n        }\n      } catch (err) {\n        const errorMsg = 'Error connecting to the server: ' + err.message;\n        console.error(errorMsg, err);\n        setError(errorMsg);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSurgeryRequests();\n  }, []);\n\n  // Get unique practice names for the filter dropdown\n  const practiceOptions = useMemo(() => {\n    const practices = new Set();\n    surgeryRequests.forEach(request => {\n      if (request.practicename) {\n        practices.add(request.practicename);\n      }\n    });\n    return ['All', ...Array.from(practices).sort()];\n  }, [surgeryRequests]);\n\n  // Filter and paginate the data\n  const filteredRequests = useMemo(() => {\n    return surgeryRequests.filter(request => \n      practiceFilter === 'All' || request.practicename === practiceFilter\n    );\n  }, [surgeryRequests, practiceFilter]);\n\n  // Get current rows for the current page\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRows = filteredRequests.slice(indexOfFirstRow, indexOfLastRow);\n  const totalPages = Math.ceil(filteredRequests.length / rowsPerPage);\n\n  // Reset to first page when filter changes\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [practiceFilter]);\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n  const nextPage = () => setCurrentPage(prev => Math.min(prev + 1, totalPages));\n  const prevPage = () => setCurrentPage(prev => Math.max(prev - 1, 1));\n\n  if (loading) {\n    return <div className=\"loading\">Loading surgery requests...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"surgery-scheduling\">\n      <div className=\"filters\">\n        <div className=\"filter-group\">\n          <label htmlFor=\"practice-filter\">Filter by Practice:</label>\n          <select\n            id=\"practice-filter\"\n            value={practiceFilter}\n            onChange={(e) => setPracticeFilter(e.target.value)}\n            className=\"filter-select\"\n          >\n            {practiceOptions.map((practice, index) => (\n              <option key={index} value={practice}>\n                {practice || 'N/A'}\n              </option>\n            ))}\n          </select>\n          <span className=\"filter-count\">\n            Showing {filteredRequests.length} of {surgeryRequests.length} records\n          </span>\n        </div>\n      </div>\n      <h2>Pending Surgery Requests</h2>\n      <div className=\"table-container\">\n        <table className=\"surgery-table\">\n          <thead>\n            <tr>\n              <th>Request ID</th>\n              <th>Patient ID</th>\n              <th>Patient Name</th>\n              <th>Patient Status</th>\n              <th>Practice</th>\n              <th>Procedure</th>\n              <th>Surgeon</th>\n              <th>Requested Date</th>\n              <th>Location</th>\n              <th>Location Type</th>\n              <th>Anesthesia</th>\n              <th>Payment Method</th>\n              <th>Status</th>\n              <th>Cleared</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {currentRows.length > 0 ? (\n              currentRows.map((request) => (\n                <tr key={request.SURGReqID}>\n                  <td>{request.SURGReqID}</td>\n                  <td>{request.pid}</td>\n                  <td>{request.patientName}</td>\n                  <td>{request.patientStatus || 'N/A'}</td>\n                  <td>{request.practicename || 'N/A'}</td>\n                  <td>{request.procedureDescription}</td>\n                  <td>{request.surgeon}</td>\n                  <td>{request.requestedDate || 'N/A'}</td>\n                  <td>{request.location || 'N/A'}</td>\n                  <td>{request.locationType || 'N/A'}</td>\n                  <td>{request.anesthesiaType || 'N/A'}</td>\n                  <td>{request.payMethod || 'N/A'}</td>\n                  <td>{request.status || 'N/A'}</td>\n                  <td>{request.clearedToSchedule || 'No'}</td>\n                  <td>\n                    <button className=\"action-btn\">View</button>\n                    <button className=\"action-btn\">Schedule</button>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"15\">No pending surgery requests found.</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      \n      {/* Pagination */}\n      {filteredRequests.length > rowsPerPage && (\n        <div className=\"pagination\">\n          <button \n            onClick={prevPage} \n            disabled={currentPage === 1}\n            className=\"pagination-btn\"\n          >\n            Previous\n          </button>\n          <div className=\"page-numbers\">\n            {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n              // Show first page, last page, current page, and pages around current page\n              let pageNum;\n              if (totalPages <= 5) {\n                pageNum = i + 1;\n              } else if (currentPage <= 3) {\n                pageNum = i + 1;\n              } else if (currentPage >= totalPages - 2) {\n                pageNum = totalPages - 4 + i;\n              } else {\n                pageNum = currentPage - 2 + i;\n              }\n              \n              if (i === 3 && currentPage < totalPages - 3) {\n                return <span key=\"ellipsis\" className=\"ellipsis\">...</span>;\n              }\n              if (i === 4 && currentPage < totalPages - 3) {\n                return (\n                  <React.Fragment key=\"last\">\n                    <button \n                      onClick={() => paginate(totalPages)}\n                      className={`pagination-btn ${currentPage === totalPages ? 'active' : ''}`}\n                    >\n                      {totalPages}\n                    </button>\n                  </React.Fragment>\n                );\n              }\n              return (\n                <button\n                  key={pageNum}\n                  onClick={() => paginate(pageNum)}\n                  className={`pagination-btn ${currentPage === pageNum ? 'active' : ''}`}\n                >\n                  {pageNum}\n                </button>\n              );\n            })}\n          </div>\n          <button \n            onClick={nextPage} \n            disabled={currentPage === totalPages}\n            className=\"pagination-btn\"\n          >\n            Next\n          </button>\n          <span className=\"page-info\">\n            Page {currentPage} of {totalPages} ({filteredRequests.length} total records)\n          </span>\n        </div>\n      )}\n      \n      <style>{`\n        .surgery-scheduling {\n          padding: 10px;\n          font-family: Arial, sans-serif;\n          width: 100%;\n          box-sizing: border-box;\n          font-size: 12px;\n        }\n        \n        h2 {\n          color: #333;\n          margin: 10px 0;\n          font-size: 1.1rem;\n        }\n        \n        .table-container {\n          width: 100%;\n          overflow-x: auto;\n          -webkit-overflow-scrolling: touch;\n          margin-bottom: 10px;\n          border: 1px solid #e0e0e0;\n          border-radius: 4px;\n          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n        }\n        \n        .surgery-table {\n          width: 100%;\n          min-width: 1100px;\n          border-collapse: collapse;\n          font-size: 0.8rem;\n        }\n        \n        .surgery-table th,\n        .surgery-table td {\n          padding: 4px 6px;\n          text-align: left;\n          border-bottom: 1px solid #e0e0e0;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          max-width: 150px;\n          color: #333;\n          line-height: 1.2;\n        }\n        \n        .surgery-table th {\n          background-color: #e6f0ff;\n          font-weight: 600;\n          position: sticky;\n          top: 0;\n          z-index: 10;\n          font-size: 0.75rem;\n          text-transform: uppercase;\n          letter-spacing: 0.5px;\n          color: #333;\n          padding: 6px 8px;\n        }\n        \n        .surgery-table tbody tr {\n          background-color: #ffffff;\n          color: #333;\n        }\n        \n        .surgery-table tbody tr:nth-child(even) {\n          background-color: #f5f9ff;\n          color: #333;\n        }\n        \n        .surgery-table tbody tr:hover {\n          background-color: #e6f0ff;\n        }\n        \n        .loading, .error {\n          padding: 10px;\n          margin: 5px 0;\n          border-radius: 4px;\n          text-align: center;\n          color: #333;\n        }\n        \n        .loading {\n          background-color: #e3f2fd;\n          color: #0d47a1;\n        }\n        \n        .error {\n          background-color: #ffebee;\n          color: #c62828;\n        }\n        \n        .action-btn {\n          background-color: #4CAF50;\n          color: white;\n          border: none;\n          padding: 2px 6px;\n          margin: 1px;\n          border-radius: 2px;\n          cursor: pointer;\n          font-size: 0.7rem;\n          line-height: 1.2;\n        }\n        \n        .action-btn:hover {\n          background-color: #45a049;\n        }\n        \n        .pagination {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          margin-top: 15px;\n          gap: 5px;\n          flex-wrap: wrap;\n        }\n        \n        .pagination-btn {\n          padding: 4px 10px;\n          margin: 0 2px;\n          border: 1px solid #ddd;\n          background-color: #fff;\n          border-radius: 3px;\n          cursor: pointer;\n          font-size: 0.8rem;\n          transition: all 0.2s;\n        }\n        \n        .pagination-btn:hover:not(:disabled) {\n          background-color: #f0f0f0;\n        }\n        \n        .pagination-btn:disabled {\n          color: #ccc;\n          cursor: not-allowed;\n          border-color: #eee;\n        }\n        \n        .pagination-btn.active {\n          background-color: #4CAF50;\n          color: white;\n          border-color: #4CAF50;\n        }\n        \n        .page-numbers {\n          display: flex;\n          align-items: center;\n          margin: 0 5px;\n        }\n        \n        .ellipsis {\n          margin: 0 5px;\n          font-size: 0.9rem;\n        }\n        \n        .page-info {\n          margin-left: 15px;\n          font-size: 0.8rem;\n          color: #666;\n        }\n        \n        .filters {\n          margin-bottom: 20px;\n          padding: 10px;\n          background-color: #f8f9fa;\n          border-radius: 4px;\n          border: 1px solid #e9ecef;\n        }\n        \n        .filter-group {\n          display: flex;\n          align-items: center;\n          gap: 10px;\n          flex-wrap: wrap;\n        }\n        \n        .filter-group label {\n          font-weight: 500;\n          font-size: 0.9rem;\n          color: #333;\n        }\n        \n        .filter-select {\n          padding: 6px 10px;\n          border: 1px solid #ced4da;\n          border-radius: 4px;\n          font-size: 0.9rem;\n          background-color: white;\n          min-width: 200px;\n        }\n        \n        .filter-count {\n          font-size: 0.85rem;\n          color: #6c757d;\n          margin-left: auto;\n        }\n        \n        @media (max-width: 768px) {\n          .pagination {\n            flex-direction: column;\n            gap: 10px;\n          }\n          \n          .page-info {\n            margin: 10px 0 0 0;\n            text-align: center;\n          }\n          .filter-group {\n            flex-direction: column;\n            align-items: flex-start;\n            gap: 5px;\n          }\n          \n          .filter-select {\n            width: 100%;\n          }\n          \n          .filter-count {\n            margin-left: 0;\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default SurgeryScheduling;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}